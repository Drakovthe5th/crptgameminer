options:
  logging: CLOUD_LOGGING_ONLY
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo '$$GCP_SA_KEY' > /tmp/service-account.json
        gcloud auth activate-service-account --key-file=/tmp/service-account.json
        gcloud config set project $$GCP_PROJECT_ID
        gcloud secrets versions access latest --secret=telegram-token > telegram_token.txt
        gcloud secrets versions access latest --secret=firebase-creds > firebase_creds.json
        gcloud secrets versions access latest --secret=nano-seed > nano_seed.txt

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/crypto-miner', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/crypto-miner']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'crypto-miniapp',
           '--image', 'gcr.io/$PROJECT_ID/crypto-miner',
           '--platform', 'managed',
           '--region', 'us-central1',
           '--allow-unauthenticated',
           '--set-env-vars=GOOGLE_CLOUD_PROJECT=$$GCP_PROJECT_ID,ENVIRONMENT=production',
           '--service-account=crypto-miner-sa@$$GCP_PROJECT_ID.iam.gserviceaccount.com']
    env:
      - 'GCP_PROJECT_ID=$_GCP_PROJECT_ID'
      - 'GCP_SA_KEY=$_GCP_SA_KEY'

substitutions:
  _GCP_PROJECT_ID: $(gcp_project_id)
  _GCP_SA_KEY: $(gcp_sa_key)

options:
  env:
    - 'GCP_PROJECT_ID=$_GCP_PROJECT_ID'
    - 'GCP_SA_KEY=$_GCP_SA_KEY'